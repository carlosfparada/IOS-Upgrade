- name: Upgrade Cisco NXOS
  hosts: nxos
  gather_facts: no
  vars:
    ansible_command_timeout: 1800
    initial_version: ''
  vars_files:
  - vars/main.yml
  - vars/vault.yml
  tasks:

  - name: Check currently running version (initial_version)
    nxos_facts:
      gather_subset: all
  - name: Check whether the upgrade is needed
    debug:
      msg:
      - "Current Version: {{ansible_net__os}}"
      - "New Version: {{new_version}}"
  - name: Assert that upgrade is needed (new version is different than current version)
    assert: 
      that: "ansible_net__os != new_version"

  - name: Store current version
    set_stats:
      data:
        initial_version: "{{ansible_net__os}}"

  - name: Check if the new image file is already in {{download_destination}}
    nxos_command:
      commands:
      - dir
    register: result_dir
  - name: Download image from scp server if needed (copy {{download_source}} {{download_destination}} vrf management)
    # e.g. copy scp://root@172.16.1.45/root/nxos.10.2.5.bin bootflash: vrf management
    nxos_config:
      commands:
      - command: "copy {{download_source}} {{download_destination}} vrf management"
        prompt: "{{download_server.user}}@{{download_server.host}}'s password:"
        answer: "{{scp_server_password}}"
    #no_log: true
    when: not download_server.file in result_dir.stdout[0]
  - name: Check whether image file is in {{download_destination}}
    nxos_command:
      commands:
      - "dir"
    register: result_dir
  - name: Assert that file is in {{download_destination}}
    assert:
      that: "'{{download_server.file}}' in result_dir.stdout[0]"

  - name: Backup current configuration
    nxos_config:
      backup: yes

  - name: Set the new image as boot config (boot nxos {{download_destination}}{{download_server.file}})
    nxos_config:
      lines:
      - "boot nxos {{download_destination}}{{download_server.file}}"

  - name: Save running config into startup config (copy running-config startup-config)
    nxos_config:
      lines:
      - copy running-config startup-config

  - name: Reload NXOS
    vars:
      ansible_command_timeout: 60
      nxos_reboot:
        confirm: true
  
  - name: Reset the TCP connection
    meta: reset_connection
  - name: Wait for NXOS to come up
    wait_for_connection:
      delay: 60
      timeout: 1800

  - name: Check currently running version
    nxos_facts:
      gather_subset: all
  - name: Check that upgrade was successful (current version is the intended new version)
    debug:
      msg:
      - "Current Version: {{ansible_net__os}}"
      - "Intended Version: {{new_version}}"
      - "UOGRADE DONDE FROM {{initial_version}} TO {{new_version}}"
  - name: Assert that upgrade was successful (current version is the intended new version)
    assert: 
      that: "ansible_net__os == new_version"

  - name: Smoke tests (ping SCP server)
    nxos_ping:
      dest: "{{download_server.host}}"
      vrf: management
